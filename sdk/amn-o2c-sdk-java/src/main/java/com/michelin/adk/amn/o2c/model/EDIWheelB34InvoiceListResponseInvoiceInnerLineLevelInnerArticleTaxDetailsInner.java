/*
 * Michelin North America Order-to-Cash APIs
 * These APIs will help you to do business transactions with Michelin.  <br><br><b>Authentication details:</b><br> <br><u>Option A:</u> OAuth2 Client Credentials (recommended) <br><u>Option B:</u> API Key + Basic Authentication (not recommended) <br><br>To request your access, please contact your representative. <br><br>Our services are based on the EDIWHEEL standards. <br>You can find more information on the <a href=\"https://www.ediwheel.com/\" target=\"_blank\">EDIWHEEL website</a>. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.michelin.adk.amn.o2c.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.michelin.adk.amn.o2c.model.EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInnerTaxAmount;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.michelin.adk.amn.JSON;

/**
 * EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner {
  public static final String SERIALIZED_NAME_TAX_TYPE_CODE = "taxTypeCode";
  @SerializedName(SERIALIZED_NAME_TAX_TYPE_CODE)
  @javax.annotation.Nonnull
  private String taxTypeCode;

  public static final String SERIALIZED_NAME_SUB_COUNTRY_CODE = "subCountryCode";
  @SerializedName(SERIALIZED_NAME_SUB_COUNTRY_CODE)
  @javax.annotation.Nullable
  private String subCountryCode;

  public static final String SERIALIZED_NAME_TAX_RATE = "taxRate";
  @SerializedName(SERIALIZED_NAME_TAX_RATE)
  @javax.annotation.Nonnull
  private BigDecimal taxRate;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "taxAmount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  @javax.annotation.Nullable
  private EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInnerTaxAmount taxAmount;

  public EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner() {
  }

  public EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner taxTypeCode(@javax.annotation.Nonnull String taxTypeCode) {
    this.taxTypeCode = taxTypeCode;
    return this;
  }

  /**
   * Identification of the type of tax or fee applicable by Line ID. Format &#x3D; 3 characters. Potential Tax Type Codes: ENV, FET, GST, LOC, STT, OTH.
   * @return taxTypeCode
   */
  @javax.annotation.Nonnull
  public String getTaxTypeCode() {
    return taxTypeCode;
  }

  public void setTaxTypeCode(@javax.annotation.Nonnull String taxTypeCode) {
    this.taxTypeCode = taxTypeCode;
  }


  public EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner subCountryCode(@javax.annotation.Nullable String subCountryCode) {
    this.subCountryCode = subCountryCode;
    return this;
  }

  /**
   * Tax sub country code by Line ID. Format &#x3D; two character Country (US or CA) - two character State abbreviation. Example: US-SC.
   * @return subCountryCode
   */
  @javax.annotation.Nullable
  public String getSubCountryCode() {
    return subCountryCode;
  }

  public void setSubCountryCode(@javax.annotation.Nullable String subCountryCode) {
    this.subCountryCode = subCountryCode;
  }


  public EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner taxRate(@javax.annotation.Nonnull BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

  /**
   * Tax rate by Line ID, where applicable.
   * @return taxRate
   */
  @javax.annotation.Nonnull
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(@javax.annotation.Nonnull BigDecimal taxRate) {
    this.taxRate = taxRate;
  }


  public EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner taxAmount(@javax.annotation.Nullable EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInnerTaxAmount taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Get taxAmount
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInnerTaxAmount getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(@javax.annotation.Nullable EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInnerTaxAmount taxAmount) {
    this.taxAmount = taxAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner edIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner = (EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner) o;
    return Objects.equals(this.taxTypeCode, edIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.taxTypeCode) &&
        Objects.equals(this.subCountryCode, edIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.subCountryCode) &&
        Objects.equals(this.taxRate, edIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.taxRate) &&
        Objects.equals(this.taxAmount, edIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.taxAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxTypeCode, subCountryCode, taxRate, taxAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner {\n");
    sb.append("    taxTypeCode: ").append(toIndentedString(taxTypeCode)).append("\n");
    sb.append("    subCountryCode: ").append(toIndentedString(subCountryCode)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("taxTypeCode");
    openapiFields.add("subCountryCode");
    openapiFields.add("taxRate");
    openapiFields.add("taxAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("taxTypeCode");
    openapiRequiredFields.add("taxRate");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner is not found in the empty JSON string", EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("taxTypeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxTypeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxTypeCode").toString()));
      }
      if ((jsonObj.get("subCountryCode") != null && !jsonObj.get("subCountryCode").isJsonNull()) && !jsonObj.get("subCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subCountryCode").toString()));
      }
      // validate the optional field `taxAmount`
      if (jsonObj.get("taxAmount") != null && !jsonObj.get("taxAmount").isJsonNull()) {
        EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInnerTaxAmount.validateJsonElement(jsonObj.get("taxAmount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner>() {
           @Override
           public void write(JsonWriter out, EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner
   * @throws IOException if the JSON string is invalid with respect to EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner
   */
  public static EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner.class);
  }

  /**
   * Convert an instance of EDIWheelB34InvoiceListResponseInvoiceInnerLineLevelInnerArticleTaxDetailsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

