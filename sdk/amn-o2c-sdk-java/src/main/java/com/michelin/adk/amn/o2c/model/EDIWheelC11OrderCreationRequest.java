/*
 * Michelin North America Order-to-Cash APIs
 * These APIs will help you to do business transactions with Michelin.  <br><br><b>Authentication details:</b><br> <br><u>Option A:</u> OAuth2 Client Credentials (recommended) <br><u>Option B:</u> API Key + Basic Authentication (not recommended) <br><br>To request your access, please contact your representative. <br><br>Our services are based on the EDIWHEEL standards. <br>You can find more information on the <a href=\"https://www.ediwheel.com/\" target=\"_blank\">EDIWHEEL website</a>. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.michelin.adk.amn.o2c.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.michelin.adk.amn.o2c.model.EDIWheelC11OrderCreationRequestAllOfBuyerParty;
import com.michelin.adk.amn.o2c.model.EDIWheelC11OrderCreationRequestAllOfConsignee;
import com.michelin.adk.amn.o2c.model.EDIWheelC11OrderCreationRequestAllOfCustomerReference;
import com.michelin.adk.amn.o2c.model.EDIWheelC11OrderCreationRequestAllOfOrderLine;
import com.michelin.adk.amn.o2c.model.EDIWheelC11OrderCreationRequestAllOfSupplierParty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.michelin.adk.amn.JSON;

/**
 * EDIWheelC11OrderCreationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class EDIWheelC11OrderCreationRequest {
  public static final String SERIALIZED_NAME_DOCUMENT_ID = "documentId";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_ID)
  @javax.annotation.Nonnull
  private String documentId;

  public static final String SERIALIZED_NAME_VARIANT = "variant";
  @SerializedName(SERIALIZED_NAME_VARIANT)
  @javax.annotation.Nullable
  private String variant;

  public static final String SERIALIZED_NAME_TRANSPORT_PRIORITY = "transportPriority";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_PRIORITY)
  @javax.annotation.Nullable
  private Object transportPriority = null;

  /**
   * Gets or Sets pickUp
   */
  @JsonAdapter(PickUpEnum.Adapter.class)
  public enum PickUpEnum {
    Y("Y");

    private String value;

    PickUpEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PickUpEnum fromValue(String value) {
      for (PickUpEnum b : PickUpEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PickUpEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PickUpEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PickUpEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PickUpEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PickUpEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PICK_UP = "pickUp";
  @SerializedName(SERIALIZED_NAME_PICK_UP)
  @javax.annotation.Nonnull
  private PickUpEnum pickUp;

  public static final String SERIALIZED_NAME_DELIVERY_REMARKS = "deliveryRemarks";
  @SerializedName(SERIALIZED_NAME_DELIVERY_REMARKS)
  @javax.annotation.Nullable
  private String deliveryRemarks;

  public static final String SERIALIZED_NAME_CUSTOMER_REFERENCE = "customerReference";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_REFERENCE)
  @javax.annotation.Nonnull
  private EDIWheelC11OrderCreationRequestAllOfCustomerReference customerReference;

  public static final String SERIALIZED_NAME_SUPPLIER_PARTY = "supplierParty";
  @SerializedName(SERIALIZED_NAME_SUPPLIER_PARTY)
  @javax.annotation.Nonnull
  private EDIWheelC11OrderCreationRequestAllOfSupplierParty supplierParty;

  public static final String SERIALIZED_NAME_BUYER_PARTY = "buyerParty";
  @SerializedName(SERIALIZED_NAME_BUYER_PARTY)
  @javax.annotation.Nonnull
  private EDIWheelC11OrderCreationRequestAllOfBuyerParty buyerParty;

  public static final String SERIALIZED_NAME_CONSIGNEE = "consignee";
  @SerializedName(SERIALIZED_NAME_CONSIGNEE)
  @javax.annotation.Nullable
  private EDIWheelC11OrderCreationRequestAllOfConsignee consignee;

  public static final String SERIALIZED_NAME_ORDER_LINE = "orderLine";
  @SerializedName(SERIALIZED_NAME_ORDER_LINE)
  @javax.annotation.Nullable
  private List<EDIWheelC11OrderCreationRequestAllOfOrderLine> orderLine = new ArrayList<>();

  public EDIWheelC11OrderCreationRequest() {
  }

  public EDIWheelC11OrderCreationRequest documentId(@javax.annotation.Nonnull String documentId) {
    this.documentId = documentId;
    return this;
  }

  /**
   * Fixed value \&quot;C1\&quot;
   * @return documentId
   */
  @javax.annotation.Nonnull
  public String getDocumentId() {
    return documentId;
  }

  public void setDocumentId(@javax.annotation.Nonnull String documentId) {
    this.documentId = documentId;
  }


  public EDIWheelC11OrderCreationRequest variant(@javax.annotation.Nullable String variant) {
    this.variant = variant;
    return this;
  }

  /**
   * Fixed value \&quot;1\&quot;
   * @return variant
   */
  @javax.annotation.Nullable
  public String getVariant() {
    return variant;
  }

  public void setVariant(@javax.annotation.Nullable String variant) {
    this.variant = variant;
  }


  public EDIWheelC11OrderCreationRequest transportPriority(@javax.annotation.Nullable Object transportPriority) {
    this.transportPriority = transportPriority;
    return this;
  }

  /**
   * Get transportPriority
   * @return transportPriority
   */
  @javax.annotation.Nullable
  public Object getTransportPriority() {
    return transportPriority;
  }

  public void setTransportPriority(@javax.annotation.Nullable Object transportPriority) {
    this.transportPriority = transportPriority;
  }


  public EDIWheelC11OrderCreationRequest pickUp(@javax.annotation.Nonnull PickUpEnum pickUp) {
    this.pickUp = pickUp;
    return this;
  }

  /**
   * Get pickUp
   * @return pickUp
   */
  @javax.annotation.Nonnull
  public PickUpEnum getPickUp() {
    return pickUp;
  }

  public void setPickUp(@javax.annotation.Nonnull PickUpEnum pickUp) {
    this.pickUp = pickUp;
  }


  public EDIWheelC11OrderCreationRequest deliveryRemarks(@javax.annotation.Nullable String deliveryRemarks) {
    this.deliveryRemarks = deliveryRemarks;
    return this;
  }

  /**
   * Get deliveryRemarks
   * @return deliveryRemarks
   */
  @javax.annotation.Nullable
  public String getDeliveryRemarks() {
    return deliveryRemarks;
  }

  public void setDeliveryRemarks(@javax.annotation.Nullable String deliveryRemarks) {
    this.deliveryRemarks = deliveryRemarks;
  }


  public EDIWheelC11OrderCreationRequest customerReference(@javax.annotation.Nonnull EDIWheelC11OrderCreationRequestAllOfCustomerReference customerReference) {
    this.customerReference = customerReference;
    return this;
  }

  /**
   * Get customerReference
   * @return customerReference
   */
  @javax.annotation.Nonnull
  public EDIWheelC11OrderCreationRequestAllOfCustomerReference getCustomerReference() {
    return customerReference;
  }

  public void setCustomerReference(@javax.annotation.Nonnull EDIWheelC11OrderCreationRequestAllOfCustomerReference customerReference) {
    this.customerReference = customerReference;
  }


  public EDIWheelC11OrderCreationRequest supplierParty(@javax.annotation.Nonnull EDIWheelC11OrderCreationRequestAllOfSupplierParty supplierParty) {
    this.supplierParty = supplierParty;
    return this;
  }

  /**
   * Get supplierParty
   * @return supplierParty
   */
  @javax.annotation.Nonnull
  public EDIWheelC11OrderCreationRequestAllOfSupplierParty getSupplierParty() {
    return supplierParty;
  }

  public void setSupplierParty(@javax.annotation.Nonnull EDIWheelC11OrderCreationRequestAllOfSupplierParty supplierParty) {
    this.supplierParty = supplierParty;
  }


  public EDIWheelC11OrderCreationRequest buyerParty(@javax.annotation.Nonnull EDIWheelC11OrderCreationRequestAllOfBuyerParty buyerParty) {
    this.buyerParty = buyerParty;
    return this;
  }

  /**
   * Get buyerParty
   * @return buyerParty
   */
  @javax.annotation.Nonnull
  public EDIWheelC11OrderCreationRequestAllOfBuyerParty getBuyerParty() {
    return buyerParty;
  }

  public void setBuyerParty(@javax.annotation.Nonnull EDIWheelC11OrderCreationRequestAllOfBuyerParty buyerParty) {
    this.buyerParty = buyerParty;
  }


  public EDIWheelC11OrderCreationRequest consignee(@javax.annotation.Nullable EDIWheelC11OrderCreationRequestAllOfConsignee consignee) {
    this.consignee = consignee;
    return this;
  }

  /**
   * Get consignee
   * @return consignee
   */
  @javax.annotation.Nullable
  public EDIWheelC11OrderCreationRequestAllOfConsignee getConsignee() {
    return consignee;
  }

  public void setConsignee(@javax.annotation.Nullable EDIWheelC11OrderCreationRequestAllOfConsignee consignee) {
    this.consignee = consignee;
  }


  public EDIWheelC11OrderCreationRequest orderLine(@javax.annotation.Nullable List<EDIWheelC11OrderCreationRequestAllOfOrderLine> orderLine) {
    this.orderLine = orderLine;
    return this;
  }

  public EDIWheelC11OrderCreationRequest addOrderLineItem(EDIWheelC11OrderCreationRequestAllOfOrderLine orderLineItem) {
    if (this.orderLine == null) {
      this.orderLine = new ArrayList<>();
    }
    this.orderLine.add(orderLineItem);
    return this;
  }

  /**
   * Get orderLine
   * @return orderLine
   */
  @javax.annotation.Nullable
  public List<EDIWheelC11OrderCreationRequestAllOfOrderLine> getOrderLine() {
    return orderLine;
  }

  public void setOrderLine(@javax.annotation.Nullable List<EDIWheelC11OrderCreationRequestAllOfOrderLine> orderLine) {
    this.orderLine = orderLine;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EDIWheelC11OrderCreationRequest edIWheelC11OrderCreationRequest = (EDIWheelC11OrderCreationRequest) o;
    return Objects.equals(this.documentId, edIWheelC11OrderCreationRequest.documentId) &&
        Objects.equals(this.variant, edIWheelC11OrderCreationRequest.variant) &&
        Objects.equals(this.transportPriority, edIWheelC11OrderCreationRequest.transportPriority) &&
        Objects.equals(this.pickUp, edIWheelC11OrderCreationRequest.pickUp) &&
        Objects.equals(this.deliveryRemarks, edIWheelC11OrderCreationRequest.deliveryRemarks) &&
        Objects.equals(this.customerReference, edIWheelC11OrderCreationRequest.customerReference) &&
        Objects.equals(this.supplierParty, edIWheelC11OrderCreationRequest.supplierParty) &&
        Objects.equals(this.buyerParty, edIWheelC11OrderCreationRequest.buyerParty) &&
        Objects.equals(this.consignee, edIWheelC11OrderCreationRequest.consignee) &&
        Objects.equals(this.orderLine, edIWheelC11OrderCreationRequest.orderLine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentId, variant, transportPriority, pickUp, deliveryRemarks, customerReference, supplierParty, buyerParty, consignee, orderLine);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EDIWheelC11OrderCreationRequest {\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    transportPriority: ").append(toIndentedString(transportPriority)).append("\n");
    sb.append("    pickUp: ").append(toIndentedString(pickUp)).append("\n");
    sb.append("    deliveryRemarks: ").append(toIndentedString(deliveryRemarks)).append("\n");
    sb.append("    customerReference: ").append(toIndentedString(customerReference)).append("\n");
    sb.append("    supplierParty: ").append(toIndentedString(supplierParty)).append("\n");
    sb.append("    buyerParty: ").append(toIndentedString(buyerParty)).append("\n");
    sb.append("    consignee: ").append(toIndentedString(consignee)).append("\n");
    sb.append("    orderLine: ").append(toIndentedString(orderLine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("documentId");
    openapiFields.add("variant");
    openapiFields.add("transportPriority");
    openapiFields.add("pickUp");
    openapiFields.add("deliveryRemarks");
    openapiFields.add("customerReference");
    openapiFields.add("supplierParty");
    openapiFields.add("buyerParty");
    openapiFields.add("consignee");
    openapiFields.add("orderLine");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("documentId");
    openapiRequiredFields.add("transportPriority");
    openapiRequiredFields.add("pickUp");
    openapiRequiredFields.add("customerReference");
    openapiRequiredFields.add("supplierParty");
    openapiRequiredFields.add("buyerParty");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EDIWheelC11OrderCreationRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EDIWheelC11OrderCreationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EDIWheelC11OrderCreationRequest is not found in the empty JSON string", EDIWheelC11OrderCreationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EDIWheelC11OrderCreationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EDIWheelC11OrderCreationRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EDIWheelC11OrderCreationRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("documentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentId").toString()));
      }
      if ((jsonObj.get("variant") != null && !jsonObj.get("variant").isJsonNull()) && !jsonObj.get("variant").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `variant` to be a primitive type in the JSON string but got `%s`", jsonObj.get("variant").toString()));
      }
      if (!jsonObj.get("pickUp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pickUp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pickUp").toString()));
      }
      // validate the required field `pickUp`
      PickUpEnum.validateJsonElement(jsonObj.get("pickUp"));
      if ((jsonObj.get("deliveryRemarks") != null && !jsonObj.get("deliveryRemarks").isJsonNull()) && !jsonObj.get("deliveryRemarks").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryRemarks` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryRemarks").toString()));
      }
      // validate the required field `customerReference`
      EDIWheelC11OrderCreationRequestAllOfCustomerReference.validateJsonElement(jsonObj.get("customerReference"));
      // validate the required field `supplierParty`
      EDIWheelC11OrderCreationRequestAllOfSupplierParty.validateJsonElement(jsonObj.get("supplierParty"));
      // validate the required field `buyerParty`
      EDIWheelC11OrderCreationRequestAllOfBuyerParty.validateJsonElement(jsonObj.get("buyerParty"));
      // validate the optional field `consignee`
      if (jsonObj.get("consignee") != null && !jsonObj.get("consignee").isJsonNull()) {
        EDIWheelC11OrderCreationRequestAllOfConsignee.validateJsonElement(jsonObj.get("consignee"));
      }
      if (jsonObj.get("orderLine") != null && !jsonObj.get("orderLine").isJsonNull()) {
        JsonArray jsonArrayorderLine = jsonObj.getAsJsonArray("orderLine");
        if (jsonArrayorderLine != null) {
          // ensure the json data is an array
          if (!jsonObj.get("orderLine").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `orderLine` to be an array in the JSON string but got `%s`", jsonObj.get("orderLine").toString()));
          }

          // validate the optional field `orderLine` (array)
          for (int i = 0; i < jsonArrayorderLine.size(); i++) {
            EDIWheelC11OrderCreationRequestAllOfOrderLine.validateJsonElement(jsonArrayorderLine.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EDIWheelC11OrderCreationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EDIWheelC11OrderCreationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EDIWheelC11OrderCreationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EDIWheelC11OrderCreationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<EDIWheelC11OrderCreationRequest>() {
           @Override
           public void write(JsonWriter out, EDIWheelC11OrderCreationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EDIWheelC11OrderCreationRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EDIWheelC11OrderCreationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EDIWheelC11OrderCreationRequest
   * @throws IOException if the JSON string is invalid with respect to EDIWheelC11OrderCreationRequest
   */
  public static EDIWheelC11OrderCreationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EDIWheelC11OrderCreationRequest.class);
  }

  /**
   * Convert an instance of EDIWheelC11OrderCreationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

