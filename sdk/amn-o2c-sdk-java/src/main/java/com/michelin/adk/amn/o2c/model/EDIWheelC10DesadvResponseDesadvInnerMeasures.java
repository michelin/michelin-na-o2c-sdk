/*
 * Michelin North America Order-to-Cash APIs for dealers
 * These APIs will help you to do business transactions with Michelin.  <br><br><b>Authentication details:</b><br> <br><u>Option A:</u> OAuth2 Client Credentials (recommended) <br><u>Option B:</u> API Key + Basic Authentication (not recommended) <br><br>To request your access, please contact your representative. <br><br>Our services are based on the EDIWHEEL standards. <br>You can find more information on the <a href=\"https://www.ediwheel.com/\" target=\"_blank\">EDIWHEEL website</a>. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dcti-bs-ec-cit-support@michelin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.michelin.adk.amn.o2c.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.michelin.adk.amn.o2c.model.EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.michelin.adk.amn.JSON;

/**
 * EDIWheelC10DesadvResponseDesadvInnerMeasures
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class EDIWheelC10DesadvResponseDesadvInnerMeasures {
  public static final String SERIALIZED_NAME_GROSS_WEIGHT = "GrossWeight";
  @SerializedName(SERIALIZED_NAME_GROSS_WEIGHT)
  @javax.annotation.Nonnull
  private EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight grossWeight;

  public static final String SERIALIZED_NAME_NET_WEIGHT = "NetWeight";
  @SerializedName(SERIALIZED_NAME_NET_WEIGHT)
  @javax.annotation.Nullable
  private EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight netWeight;

  public static final String SERIALIZED_NAME_VOLUME = "Volume";
  @SerializedName(SERIALIZED_NAME_VOLUME)
  @javax.annotation.Nullable
  private EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight volume;

  public EDIWheelC10DesadvResponseDesadvInnerMeasures() {
  }

  public EDIWheelC10DesadvResponseDesadvInnerMeasures grossWeight(@javax.annotation.Nonnull EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight grossWeight) {
    this.grossWeight = grossWeight;
    return this;
  }

  /**
   * Get grossWeight
   * @return grossWeight
   */
  @javax.annotation.Nonnull
  public EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight getGrossWeight() {
    return grossWeight;
  }

  public void setGrossWeight(@javax.annotation.Nonnull EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight grossWeight) {
    this.grossWeight = grossWeight;
  }


  public EDIWheelC10DesadvResponseDesadvInnerMeasures netWeight(@javax.annotation.Nullable EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight netWeight) {
    this.netWeight = netWeight;
    return this;
  }

  /**
   * Get netWeight
   * @return netWeight
   */
  @javax.annotation.Nullable
  public EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight getNetWeight() {
    return netWeight;
  }

  public void setNetWeight(@javax.annotation.Nullable EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight netWeight) {
    this.netWeight = netWeight;
  }


  public EDIWheelC10DesadvResponseDesadvInnerMeasures volume(@javax.annotation.Nullable EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight volume) {
    this.volume = volume;
    return this;
  }

  /**
   * Get volume
   * @return volume
   */
  @javax.annotation.Nullable
  public EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight getVolume() {
    return volume;
  }

  public void setVolume(@javax.annotation.Nullable EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight volume) {
    this.volume = volume;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EDIWheelC10DesadvResponseDesadvInnerMeasures edIWheelC10DesadvResponseDesadvInnerMeasures = (EDIWheelC10DesadvResponseDesadvInnerMeasures) o;
    return Objects.equals(this.grossWeight, edIWheelC10DesadvResponseDesadvInnerMeasures.grossWeight) &&
        Objects.equals(this.netWeight, edIWheelC10DesadvResponseDesadvInnerMeasures.netWeight) &&
        Objects.equals(this.volume, edIWheelC10DesadvResponseDesadvInnerMeasures.volume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(grossWeight, netWeight, volume);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EDIWheelC10DesadvResponseDesadvInnerMeasures {\n");
    sb.append("    grossWeight: ").append(toIndentedString(grossWeight)).append("\n");
    sb.append("    netWeight: ").append(toIndentedString(netWeight)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("GrossWeight");
    openapiFields.add("NetWeight");
    openapiFields.add("Volume");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("GrossWeight");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EDIWheelC10DesadvResponseDesadvInnerMeasures
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EDIWheelC10DesadvResponseDesadvInnerMeasures.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EDIWheelC10DesadvResponseDesadvInnerMeasures is not found in the empty JSON string", EDIWheelC10DesadvResponseDesadvInnerMeasures.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EDIWheelC10DesadvResponseDesadvInnerMeasures.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EDIWheelC10DesadvResponseDesadvInnerMeasures` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EDIWheelC10DesadvResponseDesadvInnerMeasures.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `GrossWeight`
      EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight.validateJsonElement(jsonObj.get("GrossWeight"));
      // validate the optional field `NetWeight`
      if (jsonObj.get("NetWeight") != null && !jsonObj.get("NetWeight").isJsonNull()) {
        EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight.validateJsonElement(jsonObj.get("NetWeight"));
      }
      // validate the optional field `Volume`
      if (jsonObj.get("Volume") != null && !jsonObj.get("Volume").isJsonNull()) {
        EDIWheelC10DesadvResponseDesadvInnerMeasuresGrossWeight.validateJsonElement(jsonObj.get("Volume"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EDIWheelC10DesadvResponseDesadvInnerMeasures.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EDIWheelC10DesadvResponseDesadvInnerMeasures' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EDIWheelC10DesadvResponseDesadvInnerMeasures> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EDIWheelC10DesadvResponseDesadvInnerMeasures.class));

       return (TypeAdapter<T>) new TypeAdapter<EDIWheelC10DesadvResponseDesadvInnerMeasures>() {
           @Override
           public void write(JsonWriter out, EDIWheelC10DesadvResponseDesadvInnerMeasures value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EDIWheelC10DesadvResponseDesadvInnerMeasures read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EDIWheelC10DesadvResponseDesadvInnerMeasures given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EDIWheelC10DesadvResponseDesadvInnerMeasures
   * @throws IOException if the JSON string is invalid with respect to EDIWheelC10DesadvResponseDesadvInnerMeasures
   */
  public static EDIWheelC10DesadvResponseDesadvInnerMeasures fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EDIWheelC10DesadvResponseDesadvInnerMeasures.class);
  }

  /**
   * Convert an instance of EDIWheelC10DesadvResponseDesadvInnerMeasures to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

