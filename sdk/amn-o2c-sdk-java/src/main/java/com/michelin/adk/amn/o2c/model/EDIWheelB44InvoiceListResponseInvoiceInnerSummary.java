/*
 * Michelin North America Order-to-Cash APIs for dealers
 * These APIs will help you to do business transactions with Michelin.  <br><br><b>Authentication details:</b><br> <br><u>Option A:</u> OAuth2 Client Credentials (recommended) <br><u>Option B:</u> API Key + Basic Authentication (not recommended) <br><br>To request your access, please contact your representative. <br><br>Our services are based on the EDIWHEEL standards. <br>You can find more information on the <a href=\"https://www.ediwheel.com/\" target=\"_blank\">EDIWHEEL website</a>. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dcti-bs-ec-cit-support@michelin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.michelin.adk.amn.o2c.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.michelin.adk.amn.o2c.model.EDIWheelB44InvoiceListResponseInvoiceInnerSummaryAllowanceOrChargeInner;
import com.michelin.adk.amn.o2c.model.EDIWheelB44InvoiceListResponseInvoiceInnerSummaryTaxDetailsInner;
import com.michelin.adk.amn.o2c.model.EDIWheelC11OrderCreationResponseChargeChargeAmount;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.michelin.adk.amn.JSON;

/**
 * EDIWheelB44InvoiceListResponseInvoiceInnerSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class EDIWheelB44InvoiceListResponseInvoiceInnerSummary {
  public static final String SERIALIZED_NAME_ALLOWANCE_OR_CHARGE = "AllowanceOrCharge";
  @SerializedName(SERIALIZED_NAME_ALLOWANCE_OR_CHARGE)
  @javax.annotation.Nullable
  private List<EDIWheelB44InvoiceListResponseInvoiceInnerSummaryAllowanceOrChargeInner> allowanceOrCharge = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "TotalAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
  @javax.annotation.Nonnull
  private EDIWheelC11OrderCreationResponseChargeChargeAmount totalAmount;

  public static final String SERIALIZED_NAME_TAXABLE_AMOUNT = "TaxableAmount";
  @SerializedName(SERIALIZED_NAME_TAXABLE_AMOUNT)
  @javax.annotation.Nullable
  private EDIWheelC11OrderCreationResponseChargeChargeAmount taxableAmount;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "TaxAmount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  @javax.annotation.Nullable
  private EDIWheelC11OrderCreationResponseChargeChargeAmount taxAmount;

  public static final String SERIALIZED_NAME_TOTAL_LINE_ITEMS_AMOUNT = "TotalLineItemsAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_LINE_ITEMS_AMOUNT)
  @javax.annotation.Nonnull
  private EDIWheelC11OrderCreationResponseChargeChargeAmount totalLineItemsAmount;

  public static final String SERIALIZED_NAME_TOTAL_CHARGE_AMOUNT = "TotalChargeAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_CHARGE_AMOUNT)
  @javax.annotation.Nullable
  private EDIWheelC11OrderCreationResponseChargeChargeAmount totalChargeAmount;

  public static final String SERIALIZED_NAME_TAX_DETAILS = "TaxDetails";
  @SerializedName(SERIALIZED_NAME_TAX_DETAILS)
  @javax.annotation.Nullable
  private List<EDIWheelB44InvoiceListResponseInvoiceInnerSummaryTaxDetailsInner> taxDetails = new ArrayList<>();

  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary() {
  }

  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary allowanceOrCharge(@javax.annotation.Nullable List<EDIWheelB44InvoiceListResponseInvoiceInnerSummaryAllowanceOrChargeInner> allowanceOrCharge) {
    this.allowanceOrCharge = allowanceOrCharge;
    return this;
  }

  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary addAllowanceOrChargeItem(EDIWheelB44InvoiceListResponseInvoiceInnerSummaryAllowanceOrChargeInner allowanceOrChargeItem) {
    if (this.allowanceOrCharge == null) {
      this.allowanceOrCharge = new ArrayList<>();
    }
    this.allowanceOrCharge.add(allowanceOrChargeItem);
    return this;
  }

  /**
   * Get allowanceOrCharge
   * @return allowanceOrCharge
   */
  @javax.annotation.Nullable
  public List<EDIWheelB44InvoiceListResponseInvoiceInnerSummaryAllowanceOrChargeInner> getAllowanceOrCharge() {
    return allowanceOrCharge;
  }

  public void setAllowanceOrCharge(@javax.annotation.Nullable List<EDIWheelB44InvoiceListResponseInvoiceInnerSummaryAllowanceOrChargeInner> allowanceOrCharge) {
    this.allowanceOrCharge = allowanceOrCharge;
  }


  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary totalAmount(@javax.annotation.Nonnull EDIWheelC11OrderCreationResponseChargeChargeAmount totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Get totalAmount
   * @return totalAmount
   */
  @javax.annotation.Nonnull
  public EDIWheelC11OrderCreationResponseChargeChargeAmount getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(@javax.annotation.Nonnull EDIWheelC11OrderCreationResponseChargeChargeAmount totalAmount) {
    this.totalAmount = totalAmount;
  }


  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary taxableAmount(@javax.annotation.Nullable EDIWheelC11OrderCreationResponseChargeChargeAmount taxableAmount) {
    this.taxableAmount = taxableAmount;
    return this;
  }

  /**
   * Get taxableAmount
   * @return taxableAmount
   */
  @javax.annotation.Nullable
  public EDIWheelC11OrderCreationResponseChargeChargeAmount getTaxableAmount() {
    return taxableAmount;
  }

  public void setTaxableAmount(@javax.annotation.Nullable EDIWheelC11OrderCreationResponseChargeChargeAmount taxableAmount) {
    this.taxableAmount = taxableAmount;
  }


  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary taxAmount(@javax.annotation.Nullable EDIWheelC11OrderCreationResponseChargeChargeAmount taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Get taxAmount
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public EDIWheelC11OrderCreationResponseChargeChargeAmount getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(@javax.annotation.Nullable EDIWheelC11OrderCreationResponseChargeChargeAmount taxAmount) {
    this.taxAmount = taxAmount;
  }


  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary totalLineItemsAmount(@javax.annotation.Nonnull EDIWheelC11OrderCreationResponseChargeChargeAmount totalLineItemsAmount) {
    this.totalLineItemsAmount = totalLineItemsAmount;
    return this;
  }

  /**
   * Get totalLineItemsAmount
   * @return totalLineItemsAmount
   */
  @javax.annotation.Nonnull
  public EDIWheelC11OrderCreationResponseChargeChargeAmount getTotalLineItemsAmount() {
    return totalLineItemsAmount;
  }

  public void setTotalLineItemsAmount(@javax.annotation.Nonnull EDIWheelC11OrderCreationResponseChargeChargeAmount totalLineItemsAmount) {
    this.totalLineItemsAmount = totalLineItemsAmount;
  }


  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary totalChargeAmount(@javax.annotation.Nullable EDIWheelC11OrderCreationResponseChargeChargeAmount totalChargeAmount) {
    this.totalChargeAmount = totalChargeAmount;
    return this;
  }

  /**
   * Get totalChargeAmount
   * @return totalChargeAmount
   */
  @javax.annotation.Nullable
  public EDIWheelC11OrderCreationResponseChargeChargeAmount getTotalChargeAmount() {
    return totalChargeAmount;
  }

  public void setTotalChargeAmount(@javax.annotation.Nullable EDIWheelC11OrderCreationResponseChargeChargeAmount totalChargeAmount) {
    this.totalChargeAmount = totalChargeAmount;
  }


  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary taxDetails(@javax.annotation.Nullable List<EDIWheelB44InvoiceListResponseInvoiceInnerSummaryTaxDetailsInner> taxDetails) {
    this.taxDetails = taxDetails;
    return this;
  }

  public EDIWheelB44InvoiceListResponseInvoiceInnerSummary addTaxDetailsItem(EDIWheelB44InvoiceListResponseInvoiceInnerSummaryTaxDetailsInner taxDetailsItem) {
    if (this.taxDetails == null) {
      this.taxDetails = new ArrayList<>();
    }
    this.taxDetails.add(taxDetailsItem);
    return this;
  }

  /**
   * Get taxDetails
   * @return taxDetails
   */
  @javax.annotation.Nullable
  public List<EDIWheelB44InvoiceListResponseInvoiceInnerSummaryTaxDetailsInner> getTaxDetails() {
    return taxDetails;
  }

  public void setTaxDetails(@javax.annotation.Nullable List<EDIWheelB44InvoiceListResponseInvoiceInnerSummaryTaxDetailsInner> taxDetails) {
    this.taxDetails = taxDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EDIWheelB44InvoiceListResponseInvoiceInnerSummary edIWheelB44InvoiceListResponseInvoiceInnerSummary = (EDIWheelB44InvoiceListResponseInvoiceInnerSummary) o;
    return Objects.equals(this.allowanceOrCharge, edIWheelB44InvoiceListResponseInvoiceInnerSummary.allowanceOrCharge) &&
        Objects.equals(this.totalAmount, edIWheelB44InvoiceListResponseInvoiceInnerSummary.totalAmount) &&
        Objects.equals(this.taxableAmount, edIWheelB44InvoiceListResponseInvoiceInnerSummary.taxableAmount) &&
        Objects.equals(this.taxAmount, edIWheelB44InvoiceListResponseInvoiceInnerSummary.taxAmount) &&
        Objects.equals(this.totalLineItemsAmount, edIWheelB44InvoiceListResponseInvoiceInnerSummary.totalLineItemsAmount) &&
        Objects.equals(this.totalChargeAmount, edIWheelB44InvoiceListResponseInvoiceInnerSummary.totalChargeAmount) &&
        Objects.equals(this.taxDetails, edIWheelB44InvoiceListResponseInvoiceInnerSummary.taxDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowanceOrCharge, totalAmount, taxableAmount, taxAmount, totalLineItemsAmount, totalChargeAmount, taxDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EDIWheelB44InvoiceListResponseInvoiceInnerSummary {\n");
    sb.append("    allowanceOrCharge: ").append(toIndentedString(allowanceOrCharge)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    taxableAmount: ").append(toIndentedString(taxableAmount)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    totalLineItemsAmount: ").append(toIndentedString(totalLineItemsAmount)).append("\n");
    sb.append("    totalChargeAmount: ").append(toIndentedString(totalChargeAmount)).append("\n");
    sb.append("    taxDetails: ").append(toIndentedString(taxDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AllowanceOrCharge");
    openapiFields.add("TotalAmount");
    openapiFields.add("TaxableAmount");
    openapiFields.add("TaxAmount");
    openapiFields.add("TotalLineItemsAmount");
    openapiFields.add("TotalChargeAmount");
    openapiFields.add("TaxDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TotalAmount");
    openapiRequiredFields.add("TotalLineItemsAmount");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EDIWheelB44InvoiceListResponseInvoiceInnerSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EDIWheelB44InvoiceListResponseInvoiceInnerSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EDIWheelB44InvoiceListResponseInvoiceInnerSummary is not found in the empty JSON string", EDIWheelB44InvoiceListResponseInvoiceInnerSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EDIWheelB44InvoiceListResponseInvoiceInnerSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EDIWheelB44InvoiceListResponseInvoiceInnerSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EDIWheelB44InvoiceListResponseInvoiceInnerSummary.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("AllowanceOrCharge") != null && !jsonObj.get("AllowanceOrCharge").isJsonNull()) {
        JsonArray jsonArrayallowanceOrCharge = jsonObj.getAsJsonArray("AllowanceOrCharge");
        if (jsonArrayallowanceOrCharge != null) {
          // ensure the json data is an array
          if (!jsonObj.get("AllowanceOrCharge").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `AllowanceOrCharge` to be an array in the JSON string but got `%s`", jsonObj.get("AllowanceOrCharge").toString()));
          }

          // validate the optional field `AllowanceOrCharge` (array)
          for (int i = 0; i < jsonArrayallowanceOrCharge.size(); i++) {
            EDIWheelB44InvoiceListResponseInvoiceInnerSummaryAllowanceOrChargeInner.validateJsonElement(jsonArrayallowanceOrCharge.get(i));
          };
        }
      }
      // validate the required field `TotalAmount`
      EDIWheelC11OrderCreationResponseChargeChargeAmount.validateJsonElement(jsonObj.get("TotalAmount"));
      // validate the optional field `TaxableAmount`
      if (jsonObj.get("TaxableAmount") != null && !jsonObj.get("TaxableAmount").isJsonNull()) {
        EDIWheelC11OrderCreationResponseChargeChargeAmount.validateJsonElement(jsonObj.get("TaxableAmount"));
      }
      // validate the optional field `TaxAmount`
      if (jsonObj.get("TaxAmount") != null && !jsonObj.get("TaxAmount").isJsonNull()) {
        EDIWheelC11OrderCreationResponseChargeChargeAmount.validateJsonElement(jsonObj.get("TaxAmount"));
      }
      // validate the required field `TotalLineItemsAmount`
      EDIWheelC11OrderCreationResponseChargeChargeAmount.validateJsonElement(jsonObj.get("TotalLineItemsAmount"));
      // validate the optional field `TotalChargeAmount`
      if (jsonObj.get("TotalChargeAmount") != null && !jsonObj.get("TotalChargeAmount").isJsonNull()) {
        EDIWheelC11OrderCreationResponseChargeChargeAmount.validateJsonElement(jsonObj.get("TotalChargeAmount"));
      }
      if (jsonObj.get("TaxDetails") != null && !jsonObj.get("TaxDetails").isJsonNull()) {
        JsonArray jsonArraytaxDetails = jsonObj.getAsJsonArray("TaxDetails");
        if (jsonArraytaxDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("TaxDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `TaxDetails` to be an array in the JSON string but got `%s`", jsonObj.get("TaxDetails").toString()));
          }

          // validate the optional field `TaxDetails` (array)
          for (int i = 0; i < jsonArraytaxDetails.size(); i++) {
            EDIWheelB44InvoiceListResponseInvoiceInnerSummaryTaxDetailsInner.validateJsonElement(jsonArraytaxDetails.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EDIWheelB44InvoiceListResponseInvoiceInnerSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EDIWheelB44InvoiceListResponseInvoiceInnerSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EDIWheelB44InvoiceListResponseInvoiceInnerSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EDIWheelB44InvoiceListResponseInvoiceInnerSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<EDIWheelB44InvoiceListResponseInvoiceInnerSummary>() {
           @Override
           public void write(JsonWriter out, EDIWheelB44InvoiceListResponseInvoiceInnerSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EDIWheelB44InvoiceListResponseInvoiceInnerSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EDIWheelB44InvoiceListResponseInvoiceInnerSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EDIWheelB44InvoiceListResponseInvoiceInnerSummary
   * @throws IOException if the JSON string is invalid with respect to EDIWheelB44InvoiceListResponseInvoiceInnerSummary
   */
  public static EDIWheelB44InvoiceListResponseInvoiceInnerSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EDIWheelB44InvoiceListResponseInvoiceInnerSummary.class);
  }

  /**
   * Convert an instance of EDIWheelB44InvoiceListResponseInvoiceInnerSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

