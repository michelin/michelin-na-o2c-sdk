/*
 * Michelin North America Order-to-Cash APIs for dealers
 * These APIs will help you to do business transactions with Michelin.  <br><br><b>Authentication details:</b><br> <br><u>Option A:</u> OAuth2 Client Credentials (recommended) <br><u>Option B:</u> API Key + Basic Authentication (not recommended) <br><br>To request your access, please contact your representative. <br><br>Our services are based on the EDIWHEEL standards. <br>You can find more information on the <a href=\"https://www.ediwheel.com/\" target=\"_blank\">EDIWHEEL website</a>. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dcti-bs-ec-cit-support@michelin.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.michelin.adk.amn.o2c.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.michelin.adk.amn.o2c.model.EDIWheelC11StockInquiryResponseConsignee;
import com.michelin.adk.amn.o2c.model.EDIWheelC11StockInquiryResponseCustomerReference;
import com.michelin.adk.amn.o2c.model.EDIWheelC11StockInquiryResponseErrorHead;
import com.michelin.adk.amn.o2c.model.EDIWheelC11StockInquiryResponseOrderLineInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.michelin.adk.amn.JSON;

/**
 * EDIWheelC11StockInquiryResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-13T06:44:55.014855667Z[GMT]", comments = "Generator version: 7.9.0")
public class EDIWheelC11StockInquiryResponse {
  public static final String SERIALIZED_NAME_DOCUMENT_I_D = "documentID";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_I_D)
  private String documentID;

  public static final String SERIALIZED_NAME_VARIANT = "variant";
  @SerializedName(SERIALIZED_NAME_VARIANT)
  private String variant;

  public static final String SERIALIZED_NAME_ERROR_HEAD = "errorHead";
  @SerializedName(SERIALIZED_NAME_ERROR_HEAD)
  private EDIWheelC11StockInquiryResponseErrorHead errorHead;

  public static final String SERIALIZED_NAME_TRANSPORT_PRIORITY = "transportPriority";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_PRIORITY)
  private String transportPriority;

  public static final String SERIALIZED_NAME_ORDER_LINE = "orderLine";
  @SerializedName(SERIALIZED_NAME_ORDER_LINE)
  private List<EDIWheelC11StockInquiryResponseOrderLineInner> orderLine = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOMER_REFERENCE = "customerReference";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_REFERENCE)
  private EDIWheelC11StockInquiryResponseCustomerReference customerReference;

  public static final String SERIALIZED_NAME_CONSIGNEE = "consignee";
  @SerializedName(SERIALIZED_NAME_CONSIGNEE)
  private EDIWheelC11StockInquiryResponseConsignee consignee;

  public static final String SERIALIZED_NAME_BUYER_PARTY = "buyerParty";
  @SerializedName(SERIALIZED_NAME_BUYER_PARTY)
  private EDIWheelC11StockInquiryResponseConsignee buyerParty;

  public EDIWheelC11StockInquiryResponse() {
  }

  public EDIWheelC11StockInquiryResponse documentID(String documentID) {
    this.documentID = documentID;
    return this;
  }

  /**
   * Get documentID
   * @return documentID
   */
  @javax.annotation.Nullable
  public String getDocumentID() {
    return documentID;
  }

  public void setDocumentID(String documentID) {
    this.documentID = documentID;
  }


  public EDIWheelC11StockInquiryResponse variant(String variant) {
    this.variant = variant;
    return this;
  }

  /**
   * Get variant
   * @return variant
   */
  @javax.annotation.Nullable
  public String getVariant() {
    return variant;
  }

  public void setVariant(String variant) {
    this.variant = variant;
  }


  public EDIWheelC11StockInquiryResponse errorHead(EDIWheelC11StockInquiryResponseErrorHead errorHead) {
    this.errorHead = errorHead;
    return this;
  }

  /**
   * Get errorHead
   * @return errorHead
   */
  @javax.annotation.Nullable
  public EDIWheelC11StockInquiryResponseErrorHead getErrorHead() {
    return errorHead;
  }

  public void setErrorHead(EDIWheelC11StockInquiryResponseErrorHead errorHead) {
    this.errorHead = errorHead;
  }


  public EDIWheelC11StockInquiryResponse transportPriority(String transportPriority) {
    this.transportPriority = transportPriority;
    return this;
  }

  /**
   * Get transportPriority
   * @return transportPriority
   */
  @javax.annotation.Nullable
  public String getTransportPriority() {
    return transportPriority;
  }

  public void setTransportPriority(String transportPriority) {
    this.transportPriority = transportPriority;
  }


  public EDIWheelC11StockInquiryResponse orderLine(List<EDIWheelC11StockInquiryResponseOrderLineInner> orderLine) {
    this.orderLine = orderLine;
    return this;
  }

  public EDIWheelC11StockInquiryResponse addOrderLineItem(EDIWheelC11StockInquiryResponseOrderLineInner orderLineItem) {
    if (this.orderLine == null) {
      this.orderLine = new ArrayList<>();
    }
    this.orderLine.add(orderLineItem);
    return this;
  }

  /**
   * Get orderLine
   * @return orderLine
   */
  @javax.annotation.Nullable
  public List<EDIWheelC11StockInquiryResponseOrderLineInner> getOrderLine() {
    return orderLine;
  }

  public void setOrderLine(List<EDIWheelC11StockInquiryResponseOrderLineInner> orderLine) {
    this.orderLine = orderLine;
  }


  public EDIWheelC11StockInquiryResponse customerReference(EDIWheelC11StockInquiryResponseCustomerReference customerReference) {
    this.customerReference = customerReference;
    return this;
  }

  /**
   * Get customerReference
   * @return customerReference
   */
  @javax.annotation.Nullable
  public EDIWheelC11StockInquiryResponseCustomerReference getCustomerReference() {
    return customerReference;
  }

  public void setCustomerReference(EDIWheelC11StockInquiryResponseCustomerReference customerReference) {
    this.customerReference = customerReference;
  }


  public EDIWheelC11StockInquiryResponse consignee(EDIWheelC11StockInquiryResponseConsignee consignee) {
    this.consignee = consignee;
    return this;
  }

  /**
   * Get consignee
   * @return consignee
   */
  @javax.annotation.Nullable
  public EDIWheelC11StockInquiryResponseConsignee getConsignee() {
    return consignee;
  }

  public void setConsignee(EDIWheelC11StockInquiryResponseConsignee consignee) {
    this.consignee = consignee;
  }


  public EDIWheelC11StockInquiryResponse buyerParty(EDIWheelC11StockInquiryResponseConsignee buyerParty) {
    this.buyerParty = buyerParty;
    return this;
  }

  /**
   * Get buyerParty
   * @return buyerParty
   */
  @javax.annotation.Nullable
  public EDIWheelC11StockInquiryResponseConsignee getBuyerParty() {
    return buyerParty;
  }

  public void setBuyerParty(EDIWheelC11StockInquiryResponseConsignee buyerParty) {
    this.buyerParty = buyerParty;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EDIWheelC11StockInquiryResponse edIWheelC11StockInquiryResponse = (EDIWheelC11StockInquiryResponse) o;
    return Objects.equals(this.documentID, edIWheelC11StockInquiryResponse.documentID) &&
        Objects.equals(this.variant, edIWheelC11StockInquiryResponse.variant) &&
        Objects.equals(this.errorHead, edIWheelC11StockInquiryResponse.errorHead) &&
        Objects.equals(this.transportPriority, edIWheelC11StockInquiryResponse.transportPriority) &&
        Objects.equals(this.orderLine, edIWheelC11StockInquiryResponse.orderLine) &&
        Objects.equals(this.customerReference, edIWheelC11StockInquiryResponse.customerReference) &&
        Objects.equals(this.consignee, edIWheelC11StockInquiryResponse.consignee) &&
        Objects.equals(this.buyerParty, edIWheelC11StockInquiryResponse.buyerParty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentID, variant, errorHead, transportPriority, orderLine, customerReference, consignee, buyerParty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EDIWheelC11StockInquiryResponse {\n");
    sb.append("    documentID: ").append(toIndentedString(documentID)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    errorHead: ").append(toIndentedString(errorHead)).append("\n");
    sb.append("    transportPriority: ").append(toIndentedString(transportPriority)).append("\n");
    sb.append("    orderLine: ").append(toIndentedString(orderLine)).append("\n");
    sb.append("    customerReference: ").append(toIndentedString(customerReference)).append("\n");
    sb.append("    consignee: ").append(toIndentedString(consignee)).append("\n");
    sb.append("    buyerParty: ").append(toIndentedString(buyerParty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("documentID");
    openapiFields.add("variant");
    openapiFields.add("errorHead");
    openapiFields.add("transportPriority");
    openapiFields.add("orderLine");
    openapiFields.add("customerReference");
    openapiFields.add("consignee");
    openapiFields.add("buyerParty");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EDIWheelC11StockInquiryResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EDIWheelC11StockInquiryResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EDIWheelC11StockInquiryResponse is not found in the empty JSON string", EDIWheelC11StockInquiryResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EDIWheelC11StockInquiryResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EDIWheelC11StockInquiryResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("documentID") != null && !jsonObj.get("documentID").isJsonNull()) && !jsonObj.get("documentID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentID").toString()));
      }
      if ((jsonObj.get("variant") != null && !jsonObj.get("variant").isJsonNull()) && !jsonObj.get("variant").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `variant` to be a primitive type in the JSON string but got `%s`", jsonObj.get("variant").toString()));
      }
      // validate the optional field `errorHead`
      if (jsonObj.get("errorHead") != null && !jsonObj.get("errorHead").isJsonNull()) {
        EDIWheelC11StockInquiryResponseErrorHead.validateJsonElement(jsonObj.get("errorHead"));
      }
      if ((jsonObj.get("transportPriority") != null && !jsonObj.get("transportPriority").isJsonNull()) && !jsonObj.get("transportPriority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transportPriority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transportPriority").toString()));
      }
      if (jsonObj.get("orderLine") != null && !jsonObj.get("orderLine").isJsonNull()) {
        JsonArray jsonArrayorderLine = jsonObj.getAsJsonArray("orderLine");
        if (jsonArrayorderLine != null) {
          // ensure the json data is an array
          if (!jsonObj.get("orderLine").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `orderLine` to be an array in the JSON string but got `%s`", jsonObj.get("orderLine").toString()));
          }

          // validate the optional field `orderLine` (array)
          for (int i = 0; i < jsonArrayorderLine.size(); i++) {
            EDIWheelC11StockInquiryResponseOrderLineInner.validateJsonElement(jsonArrayorderLine.get(i));
          };
        }
      }
      // validate the optional field `customerReference`
      if (jsonObj.get("customerReference") != null && !jsonObj.get("customerReference").isJsonNull()) {
        EDIWheelC11StockInquiryResponseCustomerReference.validateJsonElement(jsonObj.get("customerReference"));
      }
      // validate the optional field `consignee`
      if (jsonObj.get("consignee") != null && !jsonObj.get("consignee").isJsonNull()) {
        EDIWheelC11StockInquiryResponseConsignee.validateJsonElement(jsonObj.get("consignee"));
      }
      // validate the optional field `buyerParty`
      if (jsonObj.get("buyerParty") != null && !jsonObj.get("buyerParty").isJsonNull()) {
        EDIWheelC11StockInquiryResponseConsignee.validateJsonElement(jsonObj.get("buyerParty"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EDIWheelC11StockInquiryResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EDIWheelC11StockInquiryResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EDIWheelC11StockInquiryResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EDIWheelC11StockInquiryResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<EDIWheelC11StockInquiryResponse>() {
           @Override
           public void write(JsonWriter out, EDIWheelC11StockInquiryResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EDIWheelC11StockInquiryResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EDIWheelC11StockInquiryResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EDIWheelC11StockInquiryResponse
   * @throws IOException if the JSON string is invalid with respect to EDIWheelC11StockInquiryResponse
   */
  public static EDIWheelC11StockInquiryResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EDIWheelC11StockInquiryResponse.class);
  }

  /**
   * Convert an instance of EDIWheelC11StockInquiryResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

